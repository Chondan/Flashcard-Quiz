{"version":3,"sources":["components/Flashcard.js","components/FlashcardList.js","app.js","index.js"],"names":["FlashCard","flashcard","useState","flip","setFlip","height","setHeight","frontRef","useRef","backRef","correct","setCorrect","cardColor","setCardColor","getCardHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","options","answer","window","addEventListener","removeEventListener","style","backgroundColor","className","onClick","ref","map","option","key","uuidv4","console","log","FlashcardList","flashcards","Flashcard","id","DIFICULTY","value","name","TYPE","CATEGORY","decodeString","str","txtArea","document","createElement","innerHTML","App","setFlashcards","numberOfQuestion","setNumberOfQuestion","dificulty","setDifficulty","type","setType","category","setCategory","submit","setSubmit","toggleGenerator","setToggleGenerator","generatorContainerRef","fetch","then","res","json","data","results","correct_answer","incorrect_answers","opt","sort","random","catch","e","error","display","setTimeout","opacity","toggle","onSubmit","preventDefault","onChange","target","min","difficulty","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.80d4eaa5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid/dist'\n\nfunction FlashCard({ flashcard }) {\n    const [flip, setFlip] = useState(false);\n    const [height, setHeight] = useState(0);\n    const frontRef = useRef();\n    const backRef = useRef();\n    const [correct, setCorrect] = useState(false);\n    const [cardColor, setCardColor] = useState(\"white\");\n    function getCardHeight() {\n        const frontHeight = frontRef.current.getBoundingClientRect().height;\n        const backHeight = backRef.current.getBoundingClientRect().height;\n        return Math.max(frontHeight, backHeight, 100);\n    }\n    useEffect(() => {\n        setHeight(getCardHeight());\n    }, [flashcard.question, flashcard.options, flashcard.answer]);\n    useEffect(() => {\n        window.addEventListener(\"resize\", setHeight(getCardHeight()));\n        return () => {\n            window.removeEventListener(\"resize\", setHeight(getCardHeight()));\n        }\n    }, [])\n    useEffect(() => {\n        if (!flip) {\n            return setCardColor(\"white\");\n        }\n        setCardColor(correct ? \"lightgreen\" : \"salmon\");\n    }, [correct, flip]);\n    return (\n        <div \n            style={{ height: height, backgroundColor: cardColor }}\n            className={`card ${flip ? \"flip\" : \"\"}`}\n            onClick={() => {\n                if (!flip) { return; }\n                setFlip(flip => !flip);\n                setCorrect(false);\n            }}\n        >\n            <div className=\"front\" ref={frontRef}>\n                {flashcard.question}\n                <div className=\"flashcard-options\">\n                    {flashcard.options.map(option => (\n                        <div \n                            key={uuidv4()} \n                            className=\"flashcard-option\"\n                            onClick={() => {\n                                console.log(\"answer: \", flashcard.answer, \"select: \", option);\n                                if (flashcard.answer === option) {\n                                    setCorrect(true);\n                                }\n                                setFlip(flip => !flip);\n                            }}\n                        >\n                            {option}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"back\" ref={backRef}>{flashcard.answer}</div>\n        </div>\n    );\n}\n\nexport default FlashCard;","import React from 'react';\nimport Flashcard from './Flashcard';\n\nfunction FlashcardList({ flashcards }) {\n    return (\n        <div className=\"card-grid\">\n            {flashcards.map(flashcard => (\n                <Flashcard flashcard={flashcard} key={flashcard.id} />\n            ))}\n        </div>\n    );\n}\n\nexport default FlashcardList;","import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './components/FlashcardList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst DIFICULTY = [{ value: \"easy\", name: \"Easy\"}, {value: \"medium\", name: \"Medium\"}, {value: \"hard\", name: \"Hard\"}];\nconst TYPE = [{ value: \"multiple\", name: \"Multiple Choice\"}, { value: \"boolean\", name: \"True / False\"}];\nconst CATEGORY = [{\"id\":9,\"name\":\"General Knowledge\"},{\"id\":10,\"name\":\"Entertainment: Books\"},{\"id\":11,\"name\":\"Entertainment: Film\"},{\"id\":12,\"name\":\"Entertainment: Music\"},{\"id\":13,\"name\":\"Entertainment: Musicals & Theatres\"},{\"id\":14,\"name\":\"Entertainment: Television\"},{\"id\":15,\"name\":\"Entertainment: Video Games\"},{\"id\":16,\"name\":\"Entertainment: Board Games\"},{\"id\":17,\"name\":\"Science & Nature\"},{\"id\":18,\"name\":\"Science: Computers\"},{\"id\":19,\"name\":\"Science: Mathematics\"},{\"id\":20,\"name\":\"Mythology\"},{\"id\":21,\"name\":\"Sports\"},{\"id\":22,\"name\":\"Geography\"},{\"id\":23,\"name\":\"History\"},{\"id\":24,\"name\":\"Politics\"},{\"id\":25,\"name\":\"Art\"},{\"id\":26,\"name\":\"Celebrities\"},{\"id\":27,\"name\":\"Animals\"},{\"id\":28,\"name\":\"Vehicles\"},{\"id\":29,\"name\":\"Entertainment: Comics\"},{\"id\":30,\"name\":\"Science: Gadgets\"},{\"id\":31,\"name\":\"Entertainment: Japanese Anime & Manga\"},{\"id\":32,\"name\":\"Entertainment: Cartoon & Animations\"}];\n\nfunction App() {\n    const [flashcards, setFlashcards] = useState([]);\n    const [numberOfQuestion, setNumberOfQuestion] = useState(10);\n    const [dificulty, setDifficulty] = useState(DIFICULTY[0].value);\n    const [type, setType] = useState(TYPE[0].value);\n    const [category, setCategory] = useState(CATEGORY[0].id);\n    const [submit, setSubmit] = useState(false);\n    const [toggleGenerator, setToggleGenerator] = useState(false);\n    const generatorContainerRef = useRef();\n    useEffect(() => {\n        if (!submit) {\n            return;\n        }\n        fetch(`https://opentdb.com/api.php?amount=${numberOfQuestion}&category=${category}&type=${type}`)\n        .then(res => res.json())\n        .then(data => {\n            setFlashcards(\n                data.results.map(data => {\n                    const answer = decodeString(data.correct_answer);\n                    const options = [...data.incorrect_answers.map(opt => decodeString(opt)), answer];\n                    return {\n                        id: uuidv4(),\n                        question: decodeString(data.question),\n                        answer: answer,\n                        options: options.sort(() => Math.random() - 0.5),\n                    }\n                })\n            );\n            setSubmit(false);\n        })\n        .catch(e => console.error(e));\n    }, [submit, category, numberOfQuestion, type]);\n    useEffect(() => {\n        if (!toggleGenerator) {      \n            generatorContainerRef.current.style.opacity = 0;       \n            setTimeout(() => generatorContainerRef.current.style.display = \"none\");\n            \n        } else {\n            generatorContainerRef.current.style.display = \"block\";\n            setTimeout(() => generatorContainerRef.current.style.opacity = 1);\n        }\n    }, [toggleGenerator]);\n    function handleSubmit(e) {\n        e.preventDefault();\n        setSubmit(true);\n        setToggleGenerator(false);\n    }\n    return (\n        <>  \n            <button className=\"toggle-generator-button\" onClick={() => setToggleGenerator(toggle => !toggle)}>{toggleGenerator ? \"Close\" : \"Options\"}</button>\n            <div \n                ref={generatorContainerRef} \n                className=\"question-generator-form-container\"\n            >\n                <form \n                    className=\"question-generator-form\"\n                    onSubmit={handleSubmit}    \n                >\n                    <label>Number of Questions: </label>\n                    <input type=\"number\" value={numberOfQuestion} onChange={(e) => setNumberOfQuestion(e.target.value)} min={1} max={50} />\n                    <label>Select Category: </label> \n                    <select value={category} onChange={e => setCategory(e.target.value)} >\n                        {CATEGORY.map(category => (\n                            <option key={category.id} value={category.id}>{category.name}</option>\n                        ))}\n                    </select>\n                    <label>Select Difficulty: </label>\n                    <select value={dificulty} onChange={e => setDifficulty(e.target.value)}>\n                        {DIFICULTY.map(difficulty => (\n                            <option key={uuidv4()} value={difficulty.value}>{difficulty.name}</option>\n                        ))}\n                    </select>\n                    <label>Select Type: </label>\n                    <select value={type} onChange={e => setType(e.target.value)}>\n                        {TYPE.map(type => (\n                            <option key={uuidv4()} value={type.value}>{type.name}</option>\n                        ))}\n                    </select>\n                    <input type=\"submit\" />\n                </form>\n            </div>\n            <FlashcardList flashcards={flashcards} />\n        </>\n    );\n}\n\nfunction decodeString(str) {\n    const txtArea = document.createElement(\"textarea\");\n    txtArea.innerHTML = str;\n    return txtArea.value;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}